//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьДатаРождения(Парам01)","УМеняЕстьДатаРождения","Допустим у меня есть дата рождения 30.07.1982");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"Сегодня(Парам01)","Сегодня","и сегодня 19.08.2016");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатВычесленияРавен(Парам01)","РезультатВычесленияРавен","Тогда результат вычесления равен 408");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим у меня есть дата рождения 30.07.1982
//@УМеняЕстьДатаРождения(Парам01)
Процедура УМеняЕстьДатаРождения(Парам01) Экспорт
	Контекст.Вставить("Парам01",Парам01);
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//и сегодня 19.08.2016
//@Сегодня(Парам01)
Процедура Сегодня(Парам01) Экспорт
		Контекст.Вставить("Парам02",Парам01);

	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда результат вычесления равен 408
//@РезультатВычесленияРавен(Парам01)
Процедура РезультатВычесленияРавен(Парам01) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	
	КолчествоСекунд = Контекст.Парам02 - Контекст.Парам01;
	ПолныеГода = Цел(КолчествоСекунд / (60 *60*24*365 ));
	Месяцы = Цел(Месяц(Контекст.Парам02) - Месяц(Контекст.Парам01));
	КоличествоМесяцев = ?(Месяцы > 0,Месяцы,0) + ПолныеГода*12;
	
	Если КоличествоМесяцев <> Парам01 Тогда
		ВызватьИсключение "Неверный расчет месяцев";
	КонецЕсли;	
	КонецПроцедуры

//окончание текста модуля